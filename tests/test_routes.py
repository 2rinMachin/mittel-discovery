# tests generated by AI

import os
import pytest
from fastapi.testclient import TestClient
from app.main import app
import respx
from httpx import Response

client = TestClient(app)

@pytest.mark.asyncio
@respx.mock
def test_discover_article():
    article_id = "123"

    respx.get(f"{os.getenv('BASE_URL_ARTICLES')}/articles/{article_id}").mock(
        return_value=Response(200, json={"post_id": article_id, "title": "Test Article", "author_id": "1"})
    )
    respx.get(f"{os.getenv('BASE_URL_ENGAGEMENT')}/events/summary").mock(
        return_value=Response(200, json={"views": 10, "likes": 2, "shares": 1})
    )

    response = client.get(f"/discover/articles/{article_id}")
    assert response.status_code == 200
    data = response.json()
    assert data["post_id"] == article_id
    assert data["engagement"]["views"] == 10
    assert data["engagement"]["likes"] == 2
    assert data["engagement"]["shares"] == 1

@pytest.mark.asyncio
@respx.mock
def test_discover_user():
    user_id = "1"

    respx.get(f"{os.getenv('BASE_URL_AUTH')}/users/{user_id}").mock(
        return_value=Response(200, json={"id": 1, "email": "test@test.com", "first_name": "Test"})
    )

    response = client.get(f"/discover/users/{user_id}")
    assert response.status_code == 200
    data = response.json()
    assert data["id"] == 1
    assert data["email"] == "test@test.com"
    assert data["first_name"] == "Test"

